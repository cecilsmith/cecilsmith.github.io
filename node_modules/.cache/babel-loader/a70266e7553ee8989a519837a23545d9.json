{"ast":null,"code":"/** @license Material-UI v5.0.0-beta.0\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport scStyled from 'styled-components';\nexport default function styled(tag, options) {\n  let stylesFactory;\n\n  if (options) {\n    stylesFactory = scStyled(tag).withConfig({\n      displayName: options.label,\n      shouldForwardProp: options.shouldForwardProp\n    });\n  } else {\n    stylesFactory = scStyled(tag);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    return (...styles) => {\n      const component = typeof tag === 'string' ? `\"${tag}\"` : 'component';\n\n      if (styles.length === 0) {\n        console.error([`Material-UI: Seems like you called \\`styled(${component})()\\` without a \\`style\\` argument.`, 'You must provide a `styles` argument: `styled(\"div\")(styleYouForgotToPass)`.'].join('\\n'));\n      } else if (styles.some(style => style === undefined)) {\n        console.error(`Material-UI: the styled(${component})(...args) API requires all its args to be defined.`);\n      }\n\n      return stylesFactory(...styles);\n    };\n  }\n\n  return stylesFactory;\n}\nexport { ThemeContext, keyframes, css } from 'styled-components';\nexport { default as StyledEngineProvider } from './StyledEngineProvider';\nexport { default as GlobalStyles } from './GlobalStyles';","map":{"version":3,"sources":["/Users/nathanaelsmith/Documents/Projects/Personal/website/node_modules/@material-ui/styled-engine-sc/index.js"],"names":["scStyled","styled","tag","options","stylesFactory","withConfig","displayName","label","shouldForwardProp","process","env","NODE_ENV","styles","component","length","console","error","join","some","style","undefined","ThemeContext","keyframes","css","default","StyledEngineProvider","GlobalStyles"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,mBAArB;AACA,eAAe,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,OAArB,EAA8B;AAC3C,MAAIC,aAAJ;;AAEA,MAAID,OAAJ,EAAa;AACXC,IAAAA,aAAa,GAAGJ,QAAQ,CAACE,GAAD,CAAR,CAAcG,UAAd,CAAyB;AACvCC,MAAAA,WAAW,EAAEH,OAAO,CAACI,KADkB;AAEvCC,MAAAA,iBAAiB,EAAEL,OAAO,CAACK;AAFY,KAAzB,CAAhB;AAID,GALD,MAKO;AACLJ,IAAAA,aAAa,GAAGJ,QAAQ,CAACE,GAAD,CAAxB;AACD;;AAED,MAAIO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,WAAO,CAAC,GAAGC,MAAJ,KAAe;AACpB,YAAMC,SAAS,GAAG,OAAOX,GAAP,KAAe,QAAf,GAA2B,IAAGA,GAAI,GAAlC,GAAuC,WAAzD;;AAEA,UAAIU,MAAM,CAACE,MAAP,KAAkB,CAAtB,EAAyB;AACvBC,QAAAA,OAAO,CAACC,KAAR,CAAc,CAAE,+CAA8CH,SAAU,qCAA1D,EAAgG,8EAAhG,EAAgLI,IAAhL,CAAqL,IAArL,CAAd;AACD,OAFD,MAEO,IAAIL,MAAM,CAACM,IAAP,CAAYC,KAAK,IAAIA,KAAK,KAAKC,SAA/B,CAAJ,EAA+C;AACpDL,QAAAA,OAAO,CAACC,KAAR,CAAe,2BAA0BH,SAAU,qDAAnD;AACD;;AAED,aAAOT,aAAa,CAAC,GAAGQ,MAAJ,CAApB;AACD,KAVD;AAWD;;AAED,SAAOR,aAAP;AACD;AACD,SAASiB,YAAT,EAAuBC,SAAvB,EAAkCC,GAAlC,QAA6C,mBAA7C;AACA,SAASC,OAAO,IAAIC,oBAApB,QAAgD,wBAAhD;AACA,SAASD,OAAO,IAAIE,YAApB,QAAwC,gBAAxC","sourcesContent":["/** @license Material-UI v5.0.0-beta.0\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport scStyled from 'styled-components';\nexport default function styled(tag, options) {\n  let stylesFactory;\n\n  if (options) {\n    stylesFactory = scStyled(tag).withConfig({\n      displayName: options.label,\n      shouldForwardProp: options.shouldForwardProp\n    });\n  } else {\n    stylesFactory = scStyled(tag);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    return (...styles) => {\n      const component = typeof tag === 'string' ? `\"${tag}\"` : 'component';\n\n      if (styles.length === 0) {\n        console.error([`Material-UI: Seems like you called \\`styled(${component})()\\` without a \\`style\\` argument.`, 'You must provide a `styles` argument: `styled(\"div\")(styleYouForgotToPass)`.'].join('\\n'));\n      } else if (styles.some(style => style === undefined)) {\n        console.error(`Material-UI: the styled(${component})(...args) API requires all its args to be defined.`);\n      }\n\n      return stylesFactory(...styles);\n    };\n  }\n\n  return stylesFactory;\n}\nexport { ThemeContext, keyframes, css } from 'styled-components';\nexport { default as StyledEngineProvider } from './StyledEngineProvider';\nexport { default as GlobalStyles } from './GlobalStyles';"]},"metadata":{},"sourceType":"module"}